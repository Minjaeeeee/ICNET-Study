<프로젝트 만들기>

1. 서블릿 정의
- 서블릿은 자바 언어를 사용하여 웹 프로그램을 제작.
- 서블릿 클래스는 HttpServlet 클래스를 상속 받는다.
(53초 사진 참조)


- 클라이언트가 요청하면(리퀘스트) , 다시 정보를 주면 response 
- was는 리퀘스트객체와 리스펀스 객체가 생성된다( 톰캣에서 알아서 생성해줌)
- 우리가 사용하는 메서드에 인자값을 넣어주면 값이 출력

<요청하는 객체>
- 클라이언트에게 오는 정보들이 해당된다( 로그인 페이지에서 아이디, 패스워드, 로그인 버튼)
- 회원가입이 되거나 로그인이 되거나 등등 아이디와 패스워드는 리스펀스 객체에 실려져서 웹 어플리케이션 서버에 전달
- 왼쪽에서 오른쪽으로 이동

<응답하는 객체>
-was 뒤에는 DB가 존재
- 클라이언트한테 정상적으로 로그인을 하거나 회원가입을 유도하거나 등등
- 이런 것들을 리스펀스 객체에 실어서 클라이언트 쪽에 전달한다.
- 톰캣에서 만들어주는 인자값을 이용하여 가능

response.setContentType("text/html"); // 응답을 할때 객체는 html 형식으로
Servlet은 자바 파일이기 때문에 html 파일이 없다!

------------------------------------------------------------------------------------------
response.setContentType("text/html");
PrintWriter writer  = responce.getWriter(); <- 웹 브라우저에 출력하기 위한 스트림

writer.println("<html>");
writer.println("<head>");
writer.println("</head>");
writer.println("<body>");
writer.println(<h1>Hello World</h1>");
writer.println("</body>");
writer.println("</html>");

writer.close(); // 종료;

< 일일이 html코드를 프린트해주면서 작성을 해줘야한다. 왜냐면 서블릿은 자바파일이기 때문이다.>
-----------------------------------------------------------------------------------------

2. GET & POST 방식
- 클라이언트와 웹 어플리케이션 서버(WAS)가 있다고 환경설정!
- 요청하는 방식이 2가지 GET, POST가 있다!
- HTML 코드에 보면 WAS에게 데이터를 보낼때 전송하는 방식을 결정해주는 태그가 있는데 그 방식을 설정 가능하다

  ( Form 태그 method 속성값이 = get,post) //이렇게 설정가능하다!

2-(1) GET 방식으로 온다면?
- doGet의 메서드가 작동한다!
- url 값으로 정보가 전송되어 보안에 약함
- 네이버에 good을 검색하면 url창의 주소가 길어지는 것을 알 수 있다.


2-(2) post 방식으로 온다면?
- doPost 메소드가 실행된다! 
- header를 이용해 정보가 전송되어 보안에 강하다
- url 값이 변하지 않는다.
- 클라이언트가 url에 실어 올려지는 정보를 눈으로 볼 수가 없다.


3. doGet()
 - html 내의 form 태그의 method속성이 get일 경우 호출된다.
 - 웹 브라우저의 주소창을 이용하여 servlet을 요청한 경우에도 호출된다.
 - doGet메서드는 매개변수로 HttpServletRequest와 HttpServletResponse를 받는다( 톰캣이 자동으로 생성한다.)
 - response.setContentType("text/html; charset = euc-kr"); //한국어로 설정을 해주는 것을 의미한다. 
 - println() 메소드를 이용하여 출력하면 웹 브라우저에 출력된다.  

3-(1) doPost()
 - html 태그 내에서 post로 설정되어 있을경우 그렇게 넘어간다.










































