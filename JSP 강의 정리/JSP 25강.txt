1. url - pattern
 (1) 디렉터리 패턴: 디렉터리 형태로 서버의 해당 컴포넌트를 찾아서 실행하는 구조
     - 서블릿 맵핑과 동일한 것이다. 
     - http://localhost:8181/jsp_21_1~~~/Hello --> /Hello 서블릿  //뒤에는 맵핍명을 적어주면 된다
     - http://localhost:8181/jsp_21_1~~~/World --> /World 서블릿 //뒤에는 맵핑명을 적어주면 된다
 
 (2) 확장자 패턴: 확장자 형태로 서버의 해당 컴포넌트를 찾아서 실행하는 구조이다.
     - http://localhost:8181/jsp_21~~/hello.do  ---> *.do 서블릿
     - http://localhost:8181/jsp_21~~/world.do  ---> *.do 서블릿
    <어떻게든 입력하면 하나의 서블릿으로 이동한다. do로 맵핑되어있는 서블릿으로 이동한다>
    <서블릿에서 hello가 요청했는지 world가 요청했는지를 알 수 있다.>
-------------------------------------------------------------------------------------------------------------------------------------------------------
2. FrontController 패턴
  - 클라이언트의 다양한 요청을 한곳으로 집중시켜, 개발 및 유지보수에 효율성을 극대화 한다.
  - 요청이 다양하게 서버쪽으로 들어오면 요청마다 하나씩 어떤 작업을 할때 서블릿을 제작
  - 어떤 코드가 중복될수도 있는 경우가 발생하기도 한다. //회원정보 인증 프로그램 등등
  - 앞단에다가 FrontController를 내줌 그래서 무조건 컨트롤러로 오고 이 컨트롤러가 각각 분기 해줍니다.
  

3. Command 패턴
  - 모든 요청을 처리 하지 않고 각 요청에대한 서블릿으로 넘겨버린다 (interface) 
  - 그 이후로 DAO로 넘겨 버린다.