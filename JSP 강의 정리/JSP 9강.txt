1. JSP 태그의 개념이해
  - JSP는 Servlet과 반대로 HTML 코드에 JAVA언어를 삽입하여 동적 문서를 만들수 있다.
  - HTML코드안에 JAVA코드를 삽입하기 위해서는 밑에 태그를 이용한다.
      
	-지시자: <%@    %> : 페이지 속성
	-주석   : <%--   --%>
	-선언   : <%!    !%> : 변수, 메소드 선언 -> String str(전역의 의미) = "abc"
	-표현식: <%=   %>: 결과값 출력 -> String str = "abc" // <%= str %> 하면 abc출력, 세미콜론이 붙지는 않는다.
	-스크립트릿: <%  %>: JAVA 코드  -> html문서 안에다가 JSP 태그를 넣음(JAVA) , 자바코드에 들어가는 태그가 이거 임! // HTML 안에  <% ~~~ %> 이렇게 하면 자바 적용이 된다. (JSP의 시작이라고 생각하면 훨씬 빠를 듯!)
	-액션태크: <jsp:action> </jsp:action>: 자바빈 연결     -> <jsp:action> </jsp:action>
  
  - HTML 주석: 실제로 화면에서 소스보기를 하면 나타난다.
  - JSP는 서버에서 실행되므로 응답을 받은 다음에 소스보기하면 안나옴! 응답은 HTML로 받기때문에
    주석은 보이지가 않는다.
  - JSP는 기본바탕이 HTML이고 JAVA코드를 넣기 위해 JSP태그를 이용해 넣어둔다! 
=============================================================================================================================================================
2. JSP 동작원리
  (1). 클라이언트가 웹 브라우저로 JSP 파일을 요청하게 되면 JSP 파일을 서블릿(자바파일)으로 변환
  (2). 서블릿 파일은 컴파일 진행 후 클래스 파일(.class)로 변환 
  (3). 요청한 클라이언트한테 html파일 형태로 응답 합니다

   - 서블릿은 클라이언트가 요청이 들어올 때 생성된다
   - 스레드(재활용도 진행한다)를 사용해서 일을 처리하기 때문에 작동 속도가 빠르다
   
   (1) 클라이언트가 JSP를 요청한다! (Request 객체를 보내게 된다)
   (2) 요청에 대해서 서블릿이 있는지 없는지를 먼저 판단(Servlet.class 파일로 판단)
   (3) 없다면 servlet.java, servlet.class를 이용해서 객체를 만들고 메모리에 올려버림
   (4) 그 다음에 실행이되고 클라이언트에게 응답이 돌아감!

   <리퀘스트가 또 들어온 경우?>
   (1) java,class파일이 있는경우에는 재활용해서 그대로 사용하지만 없는 경우는 새로 만들어버림!
   (2) 다음 요청 들어올때마다 재활용을 우선으로 일을 처리한다.  
=============================================================================================================================================================

3. JSP 내부 객체

- 개발자가 객체를 생성하지 않고 바로 사용할 수 있는 객체가 내부객체라고 한다
- JSP에서 제공되는 내부 객체는 JSP 컨테이너에 의해 Servlet으로 변환될 때 자동으로 객체가 생성

3-(1) 내부 객체 종류
  - 입출력 객체: request, response, out     ---> jsp를 갖고 있는 request._________ , out.__________ 이렇게 내장되어 있음!
  - 서블릿 객체: page, config
  - 세션 객체: session
  - 예외 객체: exception