1. request 객체의 이해

(1) getContextPath() : 웹 어플리케이션의 컨텍스트 패스를 얻습니다.
(2) getMethod() : get 방식과 post 방식을 구분할 수 있습니다.
(3) getSession() : 세션 객체를 얻습니다.
(4) getProtocol() : 해당 프로토콜을 얻습니다.
(5) getRequestURL() : 요청 URL를 얻습니다.
(6) getRequestURI() : 요청 URI를 얻습니다.
(7) getQueryString(): 쿼리스트링을 얻습니다. 

<코드의 결과>
URL : http://localhost:8282/eleven/requestobj.jsp

서버: localhost
포트 번호: 8282
요청 방식: GET
프로토콜: HTTP/1.1
URL: http://localhost:8282/eleven/requestobj.jsp
URI: /eleven/requestobj.jsp //앞 서버와 포트번호를 제외한 나머지 결과이다.

=================================================================================
2. 파라미터 메소드 (매우 중요하다)
  - JSP 페이지를 제작하는 목적이 데이터 값을 전송하기 위해서이기에 중요하다.
  - 서블릿에서 했던 내용이랑 비슷하다!

(1) getParameter(String name) : name에 해당하는 파라미터 값을 구함
(2) getParameterNames() : 모든 파라미터 이름을 구한다.
(3) getParameterValues(String name): name에 해당하는 파라미터 값들을 구한다. //체크박스처럼 복수결과가 있을경우!
	(8분 35초 사진을 참고할 것!)

=================================================================================
3. response 객체
  - 웹브라우저의 요청에 응답하는 것을 response라고 한다. 
  - response.get----(); 으로 값을 설정할 수 있다.

(1) getCharacterEncoding() : 응답할 때 문자의 인코딩 형태를 구합니다.
(2) addCookie(Cookie) : 쿠키를 지정합니다.
(3) sendRedirect(URL) : 지정한 URL로 이동합니다. //다른 또 제 3의 페이지로 넘겨버리는 것을 의미! 많이 쓰인다.

- 작업 처리: requestex.html -> request_send.jsp -> pass.jsp  //request_send.jsp에서 다 처리하는 것이 아닌 나눌수도 있다.
                                            -> ng.jsp 



=================================================================================

