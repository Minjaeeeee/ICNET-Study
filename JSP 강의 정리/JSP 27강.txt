1. MVC 패턴의 이해
 - Model, View, Controller를 뜻하는 용어이다.
 - Model은 데이터베이스와의 관계를 담당, 클라이언트 요청에서 필요한 자료를 데이터 베이스로부터 추출하거나
   수정하여 Controller로 전달
 - View는 사용자한테 보여지는 UI 화면, 주로 JSP 파일로 작성, Controller에서 어떤 view 컴포넌트를 보여줄지 결정
 - Controller는 클라이언트의 요청을 받고, 적절한 Model에 지시를 내리며 Model에서 전달한 데이터를 적절한 View에 전달
 - model쪽은 Servlet(java파일) , view는 (jsp파일) , Controller도(jsp파일)
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2. MVC 패턴의 순서
 - 클라이언트 -> Controller(어떤 정보를 가져올지 판단) -> Model(데이터베이스에 접근해서 응답을 받음) -> 작업을 완수하면 다시 Controller에게 응답
   -> 사용자한테 작업 결과물을 보여주기위해 Controller가 view에게 적절한 뷰를 찾아서 전달 -> View가 클라이언트에게 작업결과를 보여줌
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
3. Model 1 기법
  - MVC에서 View와 Controller가 같이 있는 기법이다
  - 빨리 개발을 해야할때는 이 모델을 사용!
  - 최근에는 많이 쓰이지는 않는다.

  클라이언트 -> JSP(view+controller) [소스를 파악하는데 오래걸림(한파일에 같이 있기 때문에) -> DAO -> DataBase

3-(1) Model 2 기법
  - 큰 프로젝트 할때 유용하다.
  - Model, View, Controller가 모두 모듈화 되어 있는 형태
  - 모듈화: 소프트웨어를 부품화 시키는 것이다. (개발을 할수록 느낄 것이다 왜 좋은지)

 클라이언트 -> Servler(Controller) <우선 여기서 받음> -> Command(명령을 받으면 자신이 수행함) -> DAO(데이터베이스에서 정보를 빼옴)
                     JSP(View)
----------------------------------------------------------------------------------------------------------------------------------------------------------------------------
4. 전체적인 컴포넌트 설계

  